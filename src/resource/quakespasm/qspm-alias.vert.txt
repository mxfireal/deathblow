#version 110    

uniform float Blend;
uniform vec3 ShadeVector;
uniform vec4 LightColor;
attribute vec4 TexCoords; // only xy are used     
attribute vec4 Pose1Vert;
attribute vec3 Pose1Normal;
attribute vec4 Pose2Vert;
attribute vec3 Pose2Normal;

varying float FogFragCoord;

float r_avertexnormal_dot(vec3 vertexnormal) // from MH     
{
    float dot = dot(vertexnormal, ShadeVector);    
          // wtf - this reproduces anorm_dots within as reasonable a degree of tolerance as the >= 0 case    
    if(dot<0.0)
        return 1.0+dot*(13.0/44.0);
    else
        return 1.0+dot;
}
void main() {
    gl_TexCoord[0] = TexCoords;
    vec4 lerpedVert = mix(vec4(Pose1Vert.xyz, 1.0), vec4(Pose2Vert.xyz, 1.0), Blend);
    gl_Position = gl_ModelViewProjectionMatrix*lerpedVert;
    FogFragCoord = gl_Position.w;
    float dot1 = r_avertexnormal_dot(Pose1Normal);
    float dot2 = r_avertexnormal_dot(Pose2Normal);
    gl_FrontColor = LightColor*vec4(vec3(mix(dot1, dot2, Blend)), 1.0);
};
