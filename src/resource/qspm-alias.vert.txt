#version 330 

//yeah

layout (location = 0) in vec4 Pose1Vert;
layout (location = 1) in vec3 Pose1Normal;
layout (location = 2) in vec4 Pose2Vert;
layout (location = 3) in vec3 Pose2Normal;
//is actually #4, not #0.
layout (location = 4) in vec2 TexCoords; 

uniform float Blend;
uniform vec3 ShadeVector;
uniform vec4 LightColor;

uniform mat4 u_mModel;
uniform mat4 u_mView;
uniform mat4 u_mProjection;

out vec2 o_uv;
out vec4 o_color;

mat4 make_pvm()
{
    return u_mProjection * u_mView * u_mModel;
}

float r_avertexnormal_dot(vec3 vertexnormal) // from MH     
{
    float dotp = dot(vertexnormal, ShadeVector);    
          // wtf - this reproduces anorm_dots within as reasonable a degree of tolerance as the >= 0 case    
    if(dotp<0.0)
        return 1.0+dotp*(13.0/44.0);
    else
        return 1.0+dotp;
}
void main() {
    o_uv = TexCoords;
    vec4 lerpedVert = mix(vec4(Pose1Vert.xyz, 1.0), vec4(Pose2Vert.xyz, 1.0), Blend);
    gl_Position = make_pvm()*lerpedVert;
    float dot1 = r_avertexnormal_dot(Pose1Normal);
    float dot2 = r_avertexnormal_dot(Pose2Normal);
    o_color = LightColor*vec4(vec3(mix(dot1, dot2, Blend)), 1.0);
};
